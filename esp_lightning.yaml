esphome:
  name: esp_lightning
  platform: ESP8266
  board: nodemcu

wifi:
  domain: .local
  networks:
  - ssid: !secret ssid
    password: !secret wifi_password

#debug:

logger:
  level: INFO
  
# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  miso_pin: GPIO12
  
as3935_spi:
  cs_pin: GPIO4
  irq_pin: GPIO5
  #spike_rejection: 5
  mask_disturber: false
  spike_rejection: 3
  noise_level: 1
  indoor: false
  capacitance: 7
  
sensor:
  - platform: as3935
    lightning_energy:
      name: "Lightning energy"
      unit_of_measurement: "l"
    distance:
      name: "Lightning distance"
      unit_of_measurement: "km"
  - platform: wifi_signal
    name: "Lightning WiFi Signal"
    update_interval: 60s
  - platform: uptime
    name: "Lightning uptime seconds"
    id: uptime_s
        
binary_sensor:
  - platform: as3935
    name: "Lightning Alert"
  - platform: status
    name: "Lightning Status"
#  - platform: gpio
#    pin: GPIO14
#    name: "Lightning IRQ"
    
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Lightning IP Address"
    ssid:
      name: "Lightning SSID"
  - platform: template
    name: "Lightning uptime"
    lambda: |-
      uint32_t dur = id(uptime_s).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start

switch:
  - platform: restart
    name: "Lightning Restart"