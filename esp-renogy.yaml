substitutions:
  uname: Renogy
  lname: renogy
  skip: '180' # skip updates
  interval: 10s # update_interval

esphome:
  name: esp-renogy

esp32:
  board: nodemcu-32s
#  board: lolin_d32_pro
  framework:
    type: esp-idf

#web_server:
#  port: 80

wifi:
  power_save_mode: none
  networks:
  - ssid: Blacksmith
    password: !secret wifi_password

# Enable logging
logger:
  level: DEBUG #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uart

# Enable Home Assistant API
api:
  encryption:
    key: !secret key

ota:
  password: !secret ota_password

packages:
  renogy-modbus1: !include renogy-modbus1.yaml
  renogy-modbus2: !include renogy-modbus2.yaml

binary_sensor:
  - platform: status
    name: "${uname} Status"
        
sensor:
  - platform: wifi_signal
    name: "${uname} WiFi Signal"
    update_interval: 60s
    id: rssi_level
    entity_category: diagnostic    
    on_value:
      then:
        lambda: |-
          if (-1.0f > x && x >= -50.0f) { id(rssi_level).set_icon("mdi:wifi-strength-4");}
          else if (-50.0f > x && x >= -61.0f) { id(rssi_level).set_icon("mdi:wifi-strength-3");}
          else if (-61.0f > x && x >= -72.0f) { id(rssi_level).set_icon("mdi:wifi-strength-2");}
          else if (-72.0f > x && x >= -83.0f) { id(rssi_level).set_icon("mdi:wifi-strength-1");}
          else if (-83.0f > x && x >= -94.0f) { id(rssi_level).set_icon("mdi:wifi-strength-outline");}
          else { id(rssi_level).set_icon("mdi:wifi-strength-off-outline");}
  - platform: uptime
    name: "${uname} uptime seconds"
    id: uptime_s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${uname} IP Address"
    ssid:
      name: "${uname} SSID"
  - platform: template
    name: "${uname} uptime"
    lambda: |-
      uint32_t dur = id(uptime_s).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[60];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start

switch:
  - platform: restart
    name: "${uname} Restart"    
